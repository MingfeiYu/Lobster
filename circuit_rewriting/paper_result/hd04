cir to graph finished
old graph depth
---graph depth print---
var : m_0 depth : 9
var : m_1 depth : 9
var : m_2 depth : 10
var : m_3 depth : 6
var : m_4 depth : 6
var : m_5 depth : 6
var : m_6 depth : 3
var : m_7 depth : 1
---------------------
============================================= graph opt start ===================================================
initial graph size : 159
initial mult size : 75
whole case num : 616
reduced case num : 157
max case size : 38
min case size : 4
average case size : 12
median case size : 11
(and (not false) norm2) --> norm2
(and (and norm2 desty14) desty15) --> (and norm2 (and desty15 desty14))
(and (not (and n231 n223)) desty14) --> (xor (and (and desty14 n223) n231) desty14)
(not (and (and norm3 norm7) n379)) --> (not (and (and norm7 n379) norm3))
(and (and (and n301 n297) n290) n284) --> (and (and n284 n297) (and n301 n290))
(not (and (not (and n236 n222)) desty17)) --> (xor (not (and (and desty17 n222) n236)) desty17)
(and (and n481 (and n462 n457)) n476) --> (and (and (and n476 n457) n481) n462)
(and (and (and n440 n449) n1206) n444) --> (and (and (and n444 n440) n449) n1206)
(and (and (and n325 norm3) n322) i_25) --> (and (and norm3 (and i_25 n322)) n325)
(xor (and (and n554 n390) i_9) n618) --> (xor (and (and n390 i_9) n554) n618)
(and (xor (and n107 i_13) n118) n117) --> (xor (and (and n117 i_13) n107) (and n117 n118))
(and (not (and norm3 i_7)) (not i_4)) --> (xor (or (not norm3) (or (not i_7) i_4)) i_4)
(and (not (and (and n459 n457) n734)) pi020) --> (xor (and (and (and pi020 n459) n457) n734) pi020)
(and (and norm2 n893) (not (and n876 n824))) --> (and (xor (and (and n824 n893) n876) n893) norm2)
(and (not (and n481 (and n462 n457))) pi082) --> (xor (and (and (and pi082 n457) n481) n462) pi082)
(and (and n379 (not (xor n371 n373))) n376) --> (and (xor (not n371) n373) (and n376 n379))
(and (and n441 (xor norm3 (not n218))) n225) --> (and (xor (not norm3) n218) (and n225 n441))
(and n261 (not (xor n215 (and n177 i_23)))) --> (xor (and (and i_23 n261) n177) (and (not n215) n261))
(and n199 (not (xor (and n195 norm4) norm4))) --> (xor (and norm4 (and (not n195) n199)) n199)
(and n101 (not (and (and n85 n78) n74))) --> (xor (and (and n74 n85) (and n78 n101)) n101)
(and (and (not n94) (not norm4)) (not n63)) --> (not (or norm4 (or n63 n94)))
(and (not (and n104 (not (and n99 destx11)))) destx14) --> (or (and (and destx14 destx11) n99) (and (not n104) destx14))
(and (and (not (and n104 (not norm5))) destx14) destx15) --> (and (or norm5 (not n104)) (and destx15 destx14))
(and n261 (not (and (not (and n254 n220)) n219))) --> (and (xor (not (and (and n220 n219) n254)) n219) n261)
(and (xor (and (and desty17 n222) n236) desty17) n273) --> (xor (and (and (and n273 n222) desty17) n236) (and n273 desty17))
(and (and (and n731 n447) n445) (and n659 n440)) --> (and (and (and (and n447 n445) n440) n659) n731)
(and (and (and n440 n459) n658) (and n457 n458)) --> (and (and (and n458 n459) n457) (and n440 n658))
(and (and (and n461 n478) (and n457 n458)) n447) --> (and (and (and n447 n478) n458) (and n461 n457))
(and (and (and n480 n478) (and n462 n457)) n477) --> (and (and (and n478 n457) n477) (and n480 n462))
(and (and (and (and n437 n443) n440) n450) n436) --> (and (and (and (and n436 n437) n440) n443) n450)
(and (and (and (not opcode4) opcode3) (not opcode1)) opcode0) --> (and (not (or opcode4 opcode1)) (and opcode0 opcode3))
(xor (xor n610 n609) (and (and n547 n322) i_24)) --> (xor (xor (and (and i_24 n322) n547) n610) n609)
(and (xor norm2 (and (not n313) (not n273))) norm2) --> norm2
(and (xor (xor n286 (and n269 n213)) n249) n193) --> (xor (and (xor n286 n249) n193) (and (and n193 n213) n269))
(and (xor n333 (and (and n329 norm4) n317)) n151) --> (and (xor (and norm4 (and n329 n317)) n333) n151)
(xor (and (and n93 n92) (not (and n125 destx25))) n92) --> (xor (and (and (and n93 destx25) n92) n125) (and (not n93) n92))
(and (xor (or (not (and n121 n116)) n114) n121) destx23) --> (xor (and (and (and destx23 n116) n121) (not n114)) (and (not n121) destx23))
(and (not (and n121 (not (and n116 (not n114))))) destx23) --> (and (xor (or (not (and n121 n116)) n114) n121) destx23)
(and (not (xor (and (and destx17 n95) norm5) destx17)) n94) --> (xor (and (and (and n94 n95) destx17) norm5) (and (not destx17) n94))
(and (and (and n169 n149) n142) (not (and n108 destx16))) --> (and (xor (and (and destx16 n149) n108) n149) (and n169 n142))
(xor (and (not (or n175 n153)) (and n19 n182)) n19) --> (xor (and (and (and n19 n182) (not n175)) (not n153)) n19)
(and (not (and (and n182 (not n175)) (not n153))) n19) --> (xor (and (not (or n175 n153)) (and n19 n182)) n19)
(and (not (and (not (and norm5 n468)) (not n1242))) n438) --> (or (and (and n438 n468) norm5) (and n438 n1242))
(and (not (and (and (and n476 n457) n481) n462)) pi082) --> (xor (and (and (and pi082 n476) n457) (and n481 n462)) pi082)
(and n1326 (not (xor (and (and pi082 n1285) n454) pi082))) --> (xor (and (and (and pi082 n1326) n1285) n454) (and (not pi082) n1326))
(and (not (and (and (and n444 n440) n449) n1206)) pi082) --> (xor (and (and (and (and pi082 n444) n440) n449) n1206) pi082)
(not (and (and (and (not norm5) n825) (not norm12)) n943)) --> (or (or (not (and n825 n943)) norm5) norm12)
(not (xor (and (or norm4 pi039) (xor pi026 pi027)) pi027)) --> (xor (or (or (xor (not pi027) pi026) pi039) norm4) pi026)
(and (not (and (and opcode3 (not opcode0)) opcode4)) (not opcode1)) --> (xor (or (not (and opcode3 opcode4)) (or opcode1 opcode0)) opcode1)
(and (not (and (not ctable0) ocoeffs3)) (not (and ctable0 ocoeffs1))) --> (xor (not (and (xor ocoeffs1 ocoeffs3) ctable0)) ocoeffs3)
(and (not (and (and (not n2287) (not n2285)) norm6)) n293) --> (xor (and (not (or n2285 n2287)) (and norm6 n293)) n293)
(and (and (and n379 (not (xor n371 n373))) n376) i_10) --> (and (and (xor (not n373) n371) (and i_10 n376)) n379)
(and (and (and n441 (xor norm4 (not n218))) n225) i_9) --> (and (and (xor (not norm4) n218) (and i_9 n225)) n441)
(and (not (xor (xor n286 (and n269 n213)) n249)) n184) --> (xor (and (xor (not n286) n249) n184) (and (and n184 n213) n269))
(and (not (and (not (and i_7 (not i_6))) norm6)) i_8) --> (xor (and (or (not i_7) i_6) (and norm6 i_8)) i_8)
(and (and (and (and (and n306 n263) n272) n277) n268) n305) --> (and (and (and (and n306 n305) (and n277 n263)) n272) n268)
(not (and (not norm3) (not (and (not (and n127 n93)) n92)))) --> (or (xor (and (and n93 n92) n127) n92) norm3)
(and (and (and (and (and n306 n305) n277) n272) n268) n263) --> (and (and (and (and (and n306 n263) n272) n277) n268) n305)
(not (and (xor (not (and (and n220 n219) n254)) n219) n261)) --> (xor (and (and (and n220 n261) n219) n254) (or (not n261) n219))
(not (and (xor (not (and (and n243 n248) n242)) n248) n252)) --> (xor (and (and (and n243 n248) n252) n242) (or (not n252) n248))
(and (and (and (and n306 n305) (and n277 n263)) n272) n268) --> (and (and (and (and n306 n277) n268) (and n263 n305)) n272)
(not (and (not (and (and n68 (not n64)) (not norm7))) n20)) --> (xor (or (or (not (and n20 n68)) n64) norm7) n20)
(not (and (xor (not (and (and n20 n285) n271)) n20) n296)) --> (xor (and (and (and n20 n296) n285) n271) (or (not n296) n20))
(not (and (xor (or (not (and n37 n267)) n254) n267) n46)) --> (xor (or (not (and (and n46 n37) n267)) n254) (and (not n267) n46))
(and (and (and (not pi044) (not pi042)) (not pi040)) (not pi038)) --> (not (or (or pi038 pi042) (or pi044 pi040)))
(not (and (xor (or (not (and n821 n1032)) n1028) n821) n1041)) --> (xor (or (not (and (and n821 n1032) n1041)) n1028) (and (not n821) n1041))
(not (and (xor (or (not (and n825 n1533)) n1529) n825) n1539)) --> (xor (or (not (and (and n825 n1539) n1533)) n1529) (and (not n825) n1539))
(and (not (xor (not (and (or pi058 pi116) pi026)) pi058)) pi094) --> (and (and (xor pi026 pi058) pi094) (or pi116 pi058))
(and (not (and n852 (and (and n848 n825) pi026))) (not n840)) --> (not (or (and (and (and n825 pi026) n852) n848) n840))
(not (and (not (and (and (not opcode4) (not opcode3)) opcode1)) opcode2)) --> (xor (or (not (and opcode2 opcode1)) (or opcode3 opcode4)) opcode2)
(not (or (and (xor ocoeffs1 ctable1) ingones1) (not (or ocoeffs1 ctable1)))) --> (xor (or (xor ctable1 ingones1) (xor ocoeffs1 ingones1)) ingones1)
(xor (xor (xor n690 n689) (and (and n627 n322) i_24)) n686) --> (xor (xor (xor (and (and i_24 n322) n627) n686) n689) n690)
(and (and (not (or n217 n168)) (and (not n120) n226)) i_32) --> (and (and (and i_32 n226) (not n168)) (not (or n217 n120)))
(and (xor (xor n286 (and n269 n213)) (and n248 n213)) n281) --> (xor (and (xor n269 n248) (and n281 n213)) (and n281 n286))
(and n251 (not (xor (and (not norm5) n143) (and norm5 i_25)))) --> (xor (and (and (xor i_25 n143) n251) norm5) (and (not n143) n251))
(and (xor (xor n359 (xor n272 (and n253 n215))) n186) n157) --> (xor (and (xor (xor n186 n272) n359) n157) (and (and n157 n215) n253))
(and (not (and (and norm4 i_6) i_7)) (not (and i_6 i_5))) --> (xor (or (or (not i_6) i_5) (and norm4 i_7)) i_6)
(and (xor (and (and i_6 i_8) i_7) i_4) (and i_7 i_6)) --> (and (and (xor i_8 i_4) i_6) i_7)
(and (and n121 (not (and (not n115) n34))) (and norm6 i_3)) --> (and (and (and i_3 n121) norm6) (or (not n34) n115))
(and (not (xor n245 (not (and (and n240 n230) n226)))) n236) --> (xor (and (and (and n230 n236) n240) n226) (and n236 n245))
(and (not (and (not (and (not desty10) (not desty9))) desty11)) (not desty12)) --> (xor (or (not (or desty9 desty10)) (or (not desty11) desty12)) desty12)
(and (not (and n150 (not (and (not (and n140 n130)) n36)))) n21) --> (and (or (xor (and (and n36 n130) n140) n36) (not n150)) n21)
(and (not (and (and (not pi100) (not pi095)) (not pi097))) (not pi110)) --> (xor (or (or pi110 pi095) (or pi100 pi097)) pi110)
(and (and (not (and (not pi116) pi029)) pi058) (not (and pi116 pi097))) --> (and (xor (not (and (xor pi097 pi029) pi116)) pi029) pi058)
(and (not (and (not (and (and n254 ocoeffs0) norm6)) (not n245))) n44) --> (or (and (and (and n44 ocoeffs0) n254) norm6) (and n44 n245))
(not (and (not (and (not n995) (not (and (not n991) ingones0)))) n24)) --> (and (or (not (and n24 ingones0)) n991) (not (and n24 n995)))
(not (and (not (and shift0 (not a109))) (not (and (not shift0) norm8)))) --> (xor (or (xor norm8 a109) shift0) a109)
(and (not (and (not shift0) (not a108))) (not (and shift0 (not a107)))) --> (xor (and (xor a107 a108) shift0) a108)
(and (and (not (and norm4 n333)) n150) (not (and (not norm4) n336))) --> (and (xor (or (xor (not n336) n333) norm4) n333) n150)
(and (and (and n251 (xor n247 (not n237))) n218) (and n214 n207)) --> (and (and (and (and n251 n218) n207) (xor (not n247) n237)) n214)
(and (and n251 (xor n247 (not (and (and n235 n232) n222)))) n218) --> (and (and (xor (not (and (and n235 n222) n232)) n247) n218) n251)
(and n80 (and (not (xor (xor (xor n48 n45) i_2) i_10)) n53)) --> (and (xor (xor (xor (not i_2) i_10) n45) n48) (and n53 n80))
(and (not (xor (xor n199 (and n188 n152)) (and n175 n152))) n138) --> (xor (and (xor n188 n175) (and n138 n152)) (and (not n199) n138))
(and (and (not (and (not i_9) i_3)) i_7) (not (and i_9 norm7))) --> (and (xor norm7 i_9) i_7)
(and (not (and (not (and i_9 i_7)) i_8)) (not (and i_7 i_4))) --> (xor (not (and (and (xor i_4 i_8) i_7) (or i_4 i_9))) i_8)
(and (not (and (not n60) (not (and (not (and norm8 n48)) B3)))) n46) --> (and (or (xor (and (and B3 n48) norm8) B3) n60) n46)
(and (not (and (and B3 (not B2)) (not B6))) (not (and B5 norm8))) --> (xor (or (xor (or B2 B6) B5) norm8) B5)
(and (not (and norm3 (and B4 B3))) (not (and (not B6) (not B4)))) --> (xor (and norm3 (and B4 B3)) (or B4 B6))
(and (not (and (and pi116 pi026) (not pi058))) (not (and pi058 (not pi026)))) --> (xor (not (and (or pi058 pi116) pi026)) pi058)
(not (and (not (and (not n346) (not (and (not n342) (not n334))))) n305)) --> (xor (or (not (or n342 n334)) (or (not n305) n346)) n305)
(not (and (not n808) (not (and (not (and (not n801) (not norm9))) ocoeffs0)))) --> (and (or norm9 (or n801 n808)) (or ocoeffs0 n808))
(and (and (not (and ingones1 ocoeffs2)) ocoeffs0) (not (and (not ingones1) (not ocoeffs2)))) --> (and (xor ocoeffs2 ingones1) ocoeffs0)
(not (and (not (and (not shift0) (not a16))) (not (and shift0 (not a15))))) --> (xor (not (and (xor a15 a16) shift0)) a16)
(and norm1 (xor (and (not n369) (and n365 n325)) (not (and n365 n325)))) --> norm1
(and (not (xor (and n203 (not (xor n200 n197))) (xor n200 n197))) n188) --> (and (xor (not n200) n197) (and (not n203) n188))
(and n388 (and n359 (xor (xor n271 (and n262 n215)) (and n253 n215)))) --> (and (xor (and (xor n253 n262) n215) n271) (and n359 n388))
(and (and (and n52 (not n47)) (not (and (and n30 n26) n23))) n22) --> (and (not (or (and (and n23 n26) n30) n47)) (and n22 n52))
(and (not (and (not n741) (not (and (and (and n461 n457) n734) pi002)))) pi082) --> (and (or (and (and (and pi002 n461) n457) n734) n741) pi082)
(and (not (and n883 (not (and n880 (not n863))))) (not (and (not n855) n820))) --> (and (xor (or (not (and n883 n880)) n863) n883) (or (not n820) n855))
(not (and (not (and n1041 (not (and (not (and n980 (not n950))) n25)))) n29)) --> (or (and (xor (or (not (and n25 n980)) n950) n25) n1041) (not n29))
(and (not (and (not (and ingones1 (not ocoeffs1))) ctable1)) (not (and (not ingones1) ocoeffs1))) --> (or (and (xor ocoeffs1 ctable1) ingones1) (not (or ocoeffs1 ctable1)))
(not (and (not (and (and (not n3919) (not n3917)) (and (not n3914) n3913))) n669)) --> (xor (or (or (not (and n669 n3913)) n3917) (or n3919 n3914)) n669)
(not (and (not (and (and n5538 (not n5535)) (and (not n5532) (not n5530)))) shift6)) --> (xor (or (or (not (and shift6 n5538)) n5535) (or n5532 n5530)) shift6)
(xor (and n199 (not (xor (and n195 norm5) norm5))) (xor (and n195 norm5) norm5)) --> (xor (and norm5 (not (or n195 n199))) n199)
(and (and (not (and i_8 (not i_7))) (not i_9)) (not (and (not i_8) i_7))) --> (not (or (xor i_7 i_8) i_9))
(not (and (not (and norm4 (not B6))) (not (and (and (not B9) B6) (not B4))))) --> (xor (or norm4 B6) (and (or B4 B9) B6))
(not (and (not n355) (not (and (not (and (not (and n343 (not n340))) B4)) n335)))) --> (or (and (xor (or (not (and B4 n343)) n340) B4) n335) n355)
(and (not (and (and (not opext0) opcode4) opext1)) (and (not (and (not opext1) opcode4)) opcode3)) --> (xor (and (not (and opext1 opext0)) (and opcode3 opcode4)) opcode3)
(and (not (and (and ctable0 (not ocoeffs0)) (not ingones1))) (not (and (xor ocoeffs2 ingones1) ocoeffs0))) --> (or (xor (and (not ocoeffs2) ocoeffs0) ingones1) (not (or ocoeffs0 ctable0)))
(not (and (not (and (not (and n595 (not n581))) (not (and (not n515) n22)))) n29)) --> (and (or (not (and n29 n595)) n581) (or (not (and n29 n22)) n515))
(and (and (not (and (not ingones1) (not ingones0))) ctable0) (not (and (and ingones0 ocoeffs0) ingones1))) --> (xor (and (or (not ingones0) ocoeffs0) (and ingones1 ctable0)) (and ingones0 ctable0))
(and (not (and (and shift0 a14) (not shift1))) (not (and (and (not shift0) a13) shift1))) --> (or (xor (not (and shift1 a13)) (and shift0 a14)) (and shift1 shift0))
(and (not (and (and (not shift0) a40) (not shift1))) (not (and (and shift0 a37) shift1))) --> (or (xor (not (and (xor a37 a40) shift0)) a40) (xor shift1 shift0))
(xor (and (xor n359 (xor n271 (and n262 n215))) n186) (and (and n186 n215) n253)) --> (xor (and (and (xor n253 n262) n186) n215) (and (xor n359 n271) n186))
(and (and (not (and (not i_6) i_4)) i_5) (not (and (and norm8 i_6) (not i_4)))) --> (xor (and (and (xor i_4 i_6) i_5) (or norm8 i_4)) i_5)
(and (not (and (not (and i_9 i_5)) (and i_8 i_7))) (not (and (not i_7) i_5))) --> (xor (or (not (and i_7 i_8)) (and i_5 i_9)) (and (not i_7) i_5))
(and (not (not (or (xor i_7 i_8) i_9))) (not (and (not (and i_8 i_7)) i_5))) --> (and (xor (or (xor i_8 i_7) (xor i_5 i_9)) i_5) (or (not i_5) i_7))
(and (not (and (and ingones0 ctable1) ingones1)) (not (and (and (not ingones1) (not ctable0)) (not ingones0)))) --> (or (xor (or (xor ctable0 ctable1) ingones1) ctable1) (xor ingones0 ingones1))
(and (not (and (not (and shift0 a120)) shift1)) (not (and (not (and (not shift0) a123)) norm10))) --> (and (xor (and (xor a123 a120) shift0) a123) (xor norm10 shift0))
(and norm1 (xor (and (xor (and n384 n369) n387) (and n384 n369)) (not (and n384 n369)))) --> norm1
(xor n212 (xor (and (not (xor (and n203 n202) n201)) n188) (xor (and n203 n202) n201))) --> (xor (xor (and (and (not n188) n203) n202) (or n188 n201)) n212)
(xor (and (not (xor (xor (and i_16 i_8) i_7) i_15)) (and norm7 norm15)) (and norm7 norm15)) --> (and (and norm7 (xor i_15 i_7)) norm15)
(and (and (not (and pi021 pi008)) (not pi013)) (not (and (not (and (not pi021) (not pi008))) pi007))) --> (not (or (xor (and (xor pi007 pi008) (xor pi021 pi008)) pi008) pi013))
(and (and (not (and (not (and (not pi110) (not pi096))) pi097)) (and (not pi100) (not pi095))) pi097) --> (and (not (or (or pi110 pi096) (or pi100 pi095))) pi097)
(and (and norm2 (not (xor (and (not n215) (not n167)) (not (and (not n216) (not n119)))))) n225) --> (and (xor (or n167 n215) (or n216 n119)) (and norm2 n225))
(and (not (xor (or (not norm5) (or (not i_7) i_4)) i_4)) (not (and (and i_7 i_4) norm5))) --> (xor (and norm5 i_7) i_4)
(and (and n450 (not (xor norm4 (not norm10)))) (xor (and (not (xor norm4 (not norm10))) norm10) (not norm10))) --> (and (xor norm10 norm4) n450)
(and (not (and (not (and i_7 i_6)) i_9)) (not (and (and (not i_9) i_7) (not (and i_6 i_5))))) --> (xor (not (and (or i_5 i_9) (and i_6 i_7))) (or i_9 i_7))
(and (xor (and (or (not i_7) i_6) (and (not i_9) i_8)) i_8) (not (and (and i_9 i_7) norm10))) --> (and (xor (and norm10 i_7) i_9) i_8)
(and (not (and (and (not ctable1) ctable0) (and ingones1 ingones0))) (not (and (and (not ingones1) (not ctable0)) (not ingones0)))) --> (or (or (xor ingones0 ctable0) (xor ingones1 ctable0)) (and ctable0 ctable1))
(and (and (xor (xor n313 n273) norm4) (xor (and (xor n313 n273) norm4) (and (not n313) (not n273)))) n322) --> (and (and norm4 n322) (not (or n313 n273)))
(and (and (and n387 (xor norm4 (not norm10))) (xor (and (not (xor norm4 (not norm10))) norm10) (not norm10))) i_26) --> (and (not (or norm4 norm10)) (and i_26 n387))
(and (and (xor n216 (not n119)) (not (xor (and (not n215) (not n167)) (not (and norm11 (not n119)))))) n225) --> (and (and (xor norm11 n119) n225) (xor (or n167 n215) n119))
(and (not (and (not (and i_8 i_7)) i_5)) (xor (or (or (not i_6) i_5) (and (not i_8) i_7)) i_6)) --> (xor (not (or (and (xor i_6 i_8) i_7) (xor i_5 i_8))) i_8)
(and (not (xor (or (not (and opcode3 opcode4)) (or opcode1 opcode0)) opcode1)) (not (and (not (and opcode4 (not opcode3))) opcode1))) --> (and (and (xor opcode1 opcode3) opcode4) (or (not opcode0) opcode1))
(and (and (xor (not n217) (xor n168 n120)) (xor (and (not n217) (xor n168 n120)) (and (not n168) norm11))) n226) --> (and (not (or n217 n168)) (and norm11 n226))
(and (and (xor (xor n313 n273) norm4) (not (xor (and (xor n313 n273) norm4) (and (not n313) (not n273))))) n322) --> (and (and (xor (xor norm4 n313) n273) n322) (or n313 n273))
(and (and (and n373 (not (xor norm5 (not norm12)))) (xor (and (not (xor norm5 (not norm12))) norm12) (not norm12))) i_24) --> (and (and (xor norm5 norm12) i_24) n373)
(and (not (and (and (and (not pi052) (not pi039)) (not pi051)) (not pi027))) (not (xor (or (or pi026 pi051) (or pi052 pi039)) pi026))) --> (xor (and (or (or pi051 pi052) pi039) (xor pi026 pi027)) pi027)
(and (and (not (and (not (and i_7 i_6)) (not i_3))) i_4) (not (and (and (xor (not i_2) i_6) i_3) (or (not i_6) i_7)))) --> (and (or (and (xor i_7 i_3) i_6) (and (xor i_6 i_2) i_3)) i_4)
(xor (and n305 (xor (and (xor n264 n257) (not n254)) (not n254))) (and n305 (not (xor (and (xor n264 n257) (not n254)) (not n254))))) --> n305
(and (xor (and (xor (xor n312 n288) (xor n167 n143)) norm6) (and (xor n312 n288) (xor n167 n143))) (and (xor (xor n312 n288) (xor n167 n143)) norm6)) --> (and (xor (xor (xor n288 n143) n312) n167) norm6)
(xor (and (xor (and (xor n313 n273) (xor n216 n192)) (and (not n313) (not n273))) (and (xor n313 n273) (xor n216 n192))) (not (and (xor n313 n273) (xor n216 n192)))) --> true
(and (not (xor (not (and (and (xor i_4 i_8) i_7) (or i_4 i_9))) i_8)) (not (and (and (not (and i_9 i_7)) i_8) (not (and (not (and (not i_9) (not i_7))) (not i_4)))))) --> (and (xor (and (xor i_9 i_7) i_8) i_4) (or (not i_4) i_7))
(and (and (xor norm3 (xor norm8 norm13)) (xor (and norm3 (xor norm8 norm13)) norm21)) (xor (and (xor (and norm3 (xor norm8 norm13)) norm21) (and norm3 (xor norm8 norm13))) (not (and norm3 (xor norm8 norm13))))) --> (and norm21 norm3)
(and (and (xor n364 (not n324)) (xor norm5 (not (and (not n364) (not n324))))) (xor (and (not (xor norm5 (not (and (not n364) (not n324))))) (and (not n364) (not n324))) (not (and (not n364) (not n324))))) --> (and (not norm5) (and n324 n364))
(and (and (xor (xor norm4 norm9) norm14) (xor (and (xor norm4 norm9) norm14) (and norm4 norm9))) (xor (and (xor (and (xor norm4 norm9) norm14) (and norm4 norm9)) (and (xor norm4 norm9) norm14)) (not (and (xor norm4 norm9) norm14)))) --> (and (and norm14 norm4) norm9)


graph_opt called
graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 159
selected cripath : 
m_2 n162 n161 n160 n159 n138 n137 n129 n128 n80 n79 n78 n77 n76 n75 n74 n73 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n158
tmpvar#1  -->  CVar_n138
tmpvar#2  -->  CVar_n89
---------------------

old bexp : (not (and n379 (and norm3 norm7)))
new bexp : (not (and (and norm7 n379) norm3))
tgt bexp     : (not (and n158 (and n138 n89)))
sub old bexp : (not (and n158 (and n138 n89)))
sub new bexp : (not (and (and n89 n158) n138))
before depth : 8
after depth : 7
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n158
tmpvar#1  -->  CVar_n138
tmpvar#2  -->  CVar_n89
---------------------

old bexp : (and desty15 (and norm2 desty14))
new bexp : (and norm2 (and desty15 desty14))
tgt bexp     : (and n158 (and n138 n89))
sub old bexp : (and n158 (and n138 n89))
sub new bexp : (and n138 (and n158 n89))
before depth : 8
after depth : 7
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n127
tmpvar#1  -->  CVar_n63
tmpvar#2  -->  CVar_n78
---------------------

old bexp : (not (and desty17 (not (and n222 n236))))
new bexp : (xor (not (and (and desty17 n222) n236)) desty17)
tgt bexp     : (not (and n127 (not (and n63 n78))))
sub old bexp : (not (and n127 (not (and n63 n78))))
sub new bexp : (xor (not (and (and n127 n63) n78)) n127)
before depth : 5
after depth : 4
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n127
tmpvar#1  -->  CVar_n63
tmpvar#2  -->  CVar_n78
---------------------

old bexp : (and desty14 (not (and n223 n231)))
new bexp : (xor (and (and desty14 n223) n231) desty14)
tgt bexp     : (and n127 (not (and n63 n78)))
sub old bexp : (and n127 (not (and n63 n78)))
sub new bexp : (xor (and (and n127 n63) n78) n127)
before depth : 5
after depth : 4
graph replaced


graph size : 161
graph mult size : 76
graph xor size : 85
optimal graph replaced, cost : 55404
graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 161
selected cripath : 
m_1 n144 n143 n139 n138 n137 n136 n133 n132 n131 n63 n60 n59 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n139
tmpvar#0  -->  CVar_n142
tmpvar#2  -->  CVar_n149
---------------------

old bexp : (and (not (and ctable0 ocoeffs1)) (not (and (not ctable0) ocoeffs3)))
new bexp : (xor (not (and (xor ocoeffs1 ocoeffs3) ctable0)) ocoeffs3)
tgt bexp     : (and (not (and n139 n142)) (not (and (not n139) n149)))
sub old bexp : (and (not (and n139 n142)) (not (and (not n139) n149)))
sub new bexp : (xor (not (and (xor n142 n149) n139)) n149)
before depth : 9
after depth : 8
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n126
tmpvar#0  -->  CVar_n138
tmpvar#2  -->  CVar_n142
---------------------

old bexp : (not (and (and norm7 norm3) n379))
new bexp : (not (and (and norm7 n379) norm3))
tgt bexp     : (not (and (and n126 n138) n142))
sub old bexp : (not (and (and n126 n138) n142))
sub new bexp : (not (and (and n126 n142) n138))
before depth : 8
after depth : 7
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n126
tmpvar#0  -->  CVar_n138
tmpvar#2  -->  CVar_n142
---------------------

old bexp : (and (and desty14 norm2) desty15)
new bexp : (and norm2 (and desty15 desty14))
tgt bexp     : (and (and n126 n138) n142)
sub old bexp : (and (and n126 n138) n142)
sub new bexp : (and n138 (and n142 n126))
before depth : 8
after depth : 7
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 159
selected cripath : 
n38 n71 n72 n76 n77 n78 n132 n133 n136 n137 n156 n157 n162 m_2 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n129
tmpvar#0  -->  CVar_n136
tmpvar#2  -->  CVar_n155
---------------------

old bexp : (and (and desty14 norm2) desty15)
new bexp : (and norm2 (and desty15 desty14))
tgt bexp     : (and (and n129 n136) n155)
sub old bexp : (and (and n129 n136) n155)
sub new bexp : (and n136 (and n155 n129))
before depth : 7
after depth : 6
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 160
selected cripath : 
m_2 n162 n161 tmp211 n138 n137 n136 n133 n132 n131 n63 n62 n61 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 160
selected cripath : 
n66 n67 n68 n69 n77 n78 n132 n133 n136 n137 n138 n139 n153 n154 m_2 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n126
tmpvar#0  -->  CVar_n138
tmpvar#2  -->  CVar_n47
---------------------

old bexp : (and (and desty14 norm2) desty15)
new bexp : (and norm2 (and desty15 desty14))
tgt bexp     : (and (and n126 n138) n47)
sub old bexp : (and (and n126 n138) n47)
sub new bexp : (and n138 (and n47 n126))
before depth : 8
after depth : 7
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 161
selected cripath : 
m_0 n123 n122 n106 n105 n99 n98 n85 n80 n79 n78 n77 n69 n68 n67 n66 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n104
tmpvar#1  -->  CVar_n85
tmpvar#2  -->  CVar_n97
---------------------

old bexp : (not (and desty17 (not (and n236 n222))))
new bexp : (xor (not (and (and desty17 n222) n236)) desty17)
tgt bexp     : (not (and n104 (not (and n85 n97))))
sub old bexp : (not (and n104 (not (and n85 n97))))
sub new bexp : (xor (not (and (and n104 n97) n85)) n104)
before depth : 7
after depth : 6
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n104
tmpvar#1  -->  CVar_n85
tmpvar#2  -->  CVar_n97
---------------------

old bexp : (and desty14 (not (and n231 n223)))
new bexp : (xor (and (and desty14 n223) n231) desty14)
tgt bexp     : (and n104 (not (and n85 n97)))
sub old bexp : (and n104 (not (and n85 n97)))
sub new bexp : (xor (and (and n104 n97) n85) n104)
before depth : 7
after depth : 6
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n80
tmpvar#0  -->  CVar_n84
tmpvar#2  -->  CVar_n97
---------------------

old bexp : (not (and (and norm3 norm7) n379))
new bexp : (not (and (and norm7 n379) norm3))
tgt bexp     : (not (and (and n80 n84) n97))
sub old bexp : (not (and (and n80 n84) n97))
sub new bexp : (not (and (and n84 n97) n80))
before depth : 6
after depth : 5
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n63
tmpvar#0  -->  CVar_n78
tmpvar#2  -->  CVar_tmp4113
---------------------

old bexp : (not (and (not (and n222 n236)) desty17))
new bexp : (xor (not (and (and desty17 n222) n236)) desty17)
tgt bexp     : (not (and (not (and n63 n78)) tmp4113))
sub old bexp : (not (and (not (and n63 n78)) tmp4113))
sub new bexp : (xor (not (and (and tmp4113 n63) n78)) tmp4113)
before depth : 5
after depth : 4
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n80
tmpvar#0  -->  CVar_n84
tmpvar#2  -->  CVar_n97
---------------------

old bexp : (and (and norm2 desty14) desty15)
new bexp : (and norm2 (and desty15 desty14))
tgt bexp     : (and (and n80 n84) n97)
sub old bexp : (and (and n80 n84) n97)
sub new bexp : (and n80 (and n97 n84))
before depth : 6
after depth : 5
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n63
tmpvar#0  -->  CVar_n78
tmpvar#2  -->  CVar_tmp4124
---------------------

old bexp : (and (not (and n223 n231)) desty14)
new bexp : (xor (and (and desty14 n223) n231) desty14)
tgt bexp     : (and (not (and n63 n78)) tmp4124)
sub old bexp : (and (not (and n63 n78)) tmp4124)
sub new bexp : (xor (and (and tmp4124 n63) n78) tmp4124)
before depth : 5
after depth : 4
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n63
tmpvar#0  -->  CVar_n78
tmpvar#2  -->  CVar_n84
---------------------

old bexp : (and (not (and n223 n231)) desty14)
new bexp : (xor (and (and desty14 n223) n231) desty14)
tgt bexp     : (and (not (and n63 n78)) n84)
sub old bexp : (and (not (and n63 n78)) n84)
sub new bexp : (xor (and (and n84 n63) n78) n84)
before depth : 5
after depth : 4
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 163
selected cripath : 
n70 n71 n72 n76 n77 n78 n132 n133 n136 n137 n138 tmp211 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 163
selected cripath : 
m_2 n162 n161 tmp211 n138 n137 n136 n133 n132 n78 n77 n76 n75 n74 n73 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 163
selected cripath : 
n70 n71 n72 n76 n77 n78 n132 n133 n136 n137 n138 tmp211 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 163
selected cripath : 
m_2 n162 n161 tmp211 tmp212 n158 n126 n108 n80 n79 n78 n77 n76 n72 n71 n70 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n107
tmpvar#1  -->  CVar_n63
tmpvar#2  -->  CVar_n78
---------------------

old bexp : (and desty14 (not (and n223 n231)))
new bexp : (xor (and (and desty14 n223) n231) desty14)
tgt bexp     : (and n107 (not (and n63 n78)))
sub old bexp : (and n107 (not (and n63 n78)))
sub new bexp : (xor (and (and n107 n63) n78) n107)
before depth : 5
after depth : 4
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 163
selected cripath : 
n73 n74 n75 n76 n77 n78 n132 n133 n136 n137 n138 tmp211 n161 n162 m_2 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n136
tmpvar#0  -->  CVar_tmp1989
tmpvar#2  -->  CVar_n129
tmpvar#3  -->  CVar_tmp212
---------------------

old bexp : (and (not (and i_7 i_4)) (not (and (not (and i_9 i_7)) i_8)))
new bexp : (xor (not (and (and (xor i_4 i_8) i_7) (or i_4 i_9))) i_8)
tgt bexp     : (and (not (and n136 tmp1989)) (not (and (not (and n129 n136)) tmp212)))
sub old bexp : (and (not (and n136 tmp1989)) (not (and (not (and n129 n136)) tmp212)))
sub new bexp : (xor (not (and (and (xor tmp1989 tmp212) n136) (or tmp1989 n129))) tmp212)
before depth : 8
after depth : 7
graph replaced


graph size : 164
graph mult size : 77
graph xor size : 89
optimal graph replaced, cost : 39424
graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 164
selected cripath : 
m_0 n123 n122 n121 n112 n111 n108 tmp7178 tmp7179 n63 n60 n59 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n108
tmpvar#0  -->  CVar_n110
tmpvar#2  -->  CVar_n120
---------------------

old bexp : (and (not (and n231 n223)) desty14)
new bexp : (xor (and (and desty14 n223) n231) desty14)
tgt bexp     : (and (not (and n108 n110)) n120)
sub old bexp : (and (not (and n108 n110)) n120)
sub new bexp : (xor (and (and n120 n110) n108) n120)
before depth : 6
after depth : 5
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 164
selected cripath : 
m_0 n94 n93 n92 n88 n87 n86 n85 tmp4149 n78 n77 n69 n68 n65 n64 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n58
tmpvar#3  -->  CVar_n84
tmpvar#1  -->  CVar_n78
tmpvar#2  -->  CVar_n63
---------------------

old bexp : (and n1326 (not (xor pi082 (and n454 (and n1285 pi082)))))
new bexp : (xor (and (and (and pi082 n1326) n1285) n454) (and (not pi082) n1326))
tgt bexp     : (and n58 (not (xor n84 (and n78 (and n63 n84)))))
sub old bexp : (and n58 (not (xor n84 (and n78 (and n63 n84)))))
sub new bexp : (xor (and (and (and n84 n58) n63) n78) (and (not n84) n58))
before depth : 5
after depth : 4
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 168
selected cripath : 
m_2 n154 n153 n138 n137 n136 n133 n132 n78 n77 n76 n75 n74 n42 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 168
selected cripath : 
m_0 n94 n93 n56 n49 n48 n47 n41 n37 n36 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n34
tmpvar#0  -->  CVar_n47
tmpvar#2  -->  CVar_n55
---------------------

old bexp : (and (not (and n223 n231)) desty14)
new bexp : (xor (and (and desty14 n223) n231) desty14)
tgt bexp     : (and (not (and n34 n47)) n55)
sub old bexp : (and (not (and n34 n47)) n55)
sub new bexp : (xor (and (and n55 n34) n47) n55)
before depth : 6
after depth : 5
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n37
tmpvar#0  -->  CVar_n40
tmpvar#2  -->  CVar_n46
---------------------

old bexp : (and (and norm2 desty14) desty15)
new bexp : (and norm2 (and desty15 desty14))
tgt bexp     : (and (and n37 n40) n46)
sub old bexp : (and (and n37 n40) n46)
sub new bexp : (and n37 (and n46 n40))
before depth : 4
after depth : 3
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n35
tmpvar#0  -->  CVar_n36
tmpvar#2  -->  CVar_n40
---------------------

old bexp : (and (and desty14 norm2) desty15)
new bexp : (and norm2 (and desty15 desty14))
tgt bexp     : (and (and n35 n36) n40)
sub old bexp : (and (and n35 n36) n40)
sub new bexp : (and n36 (and n40 n35))
before depth : 3
after depth : 2
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n64 n65 n68 n69 n77 n78 n132 n133 n136 n137 n138 n153 n154 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
m_1 tmp959 tmp960 n139 n138 n137 n136 n133 n132 n131 n63 n60 n59 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n126
tmpvar#0  -->  CVar_n138
tmpvar#2  -->  CVar_tmp961
---------------------

old bexp : (not (and (and norm7 norm3) n379))
new bexp : (not (and (and norm7 n379) norm3))
tgt bexp     : (not (and (and n126 n138) tmp961))
sub old bexp : (not (and (and n126 n138) tmp961))
sub new bexp : (not (and (and n126 tmp961) n138))
before depth : 8
after depth : 7
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n126
tmpvar#0  -->  CVar_n138
tmpvar#2  -->  CVar_tmp961
---------------------

old bexp : (and (and desty14 norm2) desty15)
new bexp : (and norm2 (and desty15 desty14))
tgt bexp     : (and (and n126 n138) tmp961)
sub old bexp : (and (and n126 n138) tmp961)
sub new bexp : (and n138 (and tmp961 n126))
before depth : 8
after depth : 7
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n126
tmpvar#1  -->  CVar_n129
tmpvar#2  -->  CVar_n136
---------------------

old bexp : (and desty14 (not (and n223 n231)))
new bexp : (xor (and (and desty14 n223) n231) desty14)
tgt bexp     : (and n126 (not (and n129 n136)))
sub old bexp : (and n126 (not (and n129 n136)))
sub new bexp : (xor (and (and n126 n129) n136) n126)
before depth : 7
after depth : 6
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
m_2 n154 n153 n138 n137 n136 n133 n132 n131 n63 n60 n59 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n64 n65 n68 n69 n77 n78 tmp625 tmp624 n129 tmp1989 tmp8153 tmp8150 tmp8149 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
m_2 n154 n153 n138 n137 n136 n133 n132 n131 n63 n60 n59 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n61 n62 n63 n131 n132 n133 n136 n137 n138 n153 n154 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n59 n60 n63 tmp626 tmp625 tmp624 n129 tmp1989 tmp8153 tmp8150 tmp8149 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n64 n65 n68 n69 n77 n78 tmp625 tmp624 n129 tmp1989 tmp8153 tmp8150 tmp8149 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n61 n62 n63 n131 n132 n133 n136 n137 n138 n153 n154 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
m_2 n154 n153 n138 n137 n136 n133 n132 n131 n63 n60 n59 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n70 n71 n72 n76 n77 n78 n132 n133 n136 n137 n138 n153 n154 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
m_2 n154 n153 n138 n137 n136 n133 n132 n78 n77 n76 n72 n71 n38 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n73 n74 n75 n76 n77 n78 n132 n133 n136 tmp8151 tmp8150 tmp8149 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
m_2 n162 tmp8149 tmp8150 tmp8153 tmp1989 n129 tmp624 tmp625 n78 n77 n69 n68 n67 n66 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 170
selected cripath : 
n61 n62 n63 n131 n132 n133 n136 n137 n138 n153 n154 m_2 

dangling node deleted : nodeVal : AND index : 139
dangling node deleted : nodeVal : AND index : 165
dangling node deleted : nodeVal : AND index : 179
dangling node deleted : nodeVal : AND index : 185
dangling node deleted : nodeVal : AND index : 225
dangling node deleted : nodeVal : AND index : 255
dangling node deleted : nodeVal : AND index : 273
dangling node deleted : nodeVal : AND index : 275
dangling node deleted : nodeVal : AND index : 281
dangling node deleted : nodeVal : AND index : 289
dangling node deleted : nodeVal : AND index : 293
dangling node deleted : nodeVal : AND index : 403
dangling node deleted : nodeVal : NOT index : 167
dangling node deleted : nodeVal : NOT index : 181
dangling node deleted : nodeVal : NOT index : 227
dangling node deleted : nodeVal : NOT index : 257
dangling node deleted : nodeVal : NOT index : 291
dangling node deleted : nodeVal : NOT index : 393
dangling node deleted : nodeVal : n105 index : 1
dangling node deleted : nodeVal : n128 index : 1
dangling node deleted : nodeVal : n143 index : 1
dangling node deleted : nodeVal : n144 index : 1
dangling node deleted : nodeVal : n151 index : 1
dangling node deleted : nodeVal : n157 index : 1
dangling node deleted : nodeVal : n159 index : 1
dangling node deleted : nodeVal : n160 index : 1
dangling node deleted : nodeVal : n161 index : 1
dangling node deleted : nodeVal : n98 index : 1
dangling node deleted : nodeVal : n99 index : 1
dangling node deleted : nodeVal : tmp4112 index : 1
dangling node deleted : nodeVal : AND index : 287
dangling node deleted : nodeVal : AND index : 343
dangling node deleted : nodeVal : AND index : 370
dangling node deleted : nodeVal : AND index : 392
dangling node deleted : nodeVal : NOT index : 271
dangling node deleted : nodeVal : NOT index : 283
dangling node deleted : nodeVal : NOT index : 340
dangling node deleted : nodeVal : NOT index : 367
dangling node deleted : nodeVal : XOR index : 355
dangling node deleted : nodeVal : XOR index : 388
dangling node deleted : nodeVal : XOR index : 400
dangling node deleted : nodeVal : XOR index : 408
dangling node deleted : nodeVal : n150 index : 1
dangling node deleted : nodeVal : n156 index : 1
dangling node deleted : nodeVal : n80 index : 1
dangling node deleted : nodeVal : tmp211 index : 1
dangling node deleted : nodeVal : tmp243 index : 1
dangling node deleted : nodeVal : tmp4098 index : 1
dangling node deleted : nodeVal : tmp4121 index : 1
dangling node deleted : nodeVal : tmp4129 index : 1
dangling node deleted : nodeVal : tmp631 index : 1
dangling node deleted : nodeVal : tmp964 index : 1
dangling node deleted : nodeVal : tmp983 index : 1
dangling node deleted : nodeVal : AND index : 269
dangling node deleted : nodeVal : AND index : 339
dangling node deleted : nodeVal : AND index : 342
dangling node deleted : nodeVal : AND index : 354
dangling node deleted : nodeVal : AND index : 366
dangling node deleted : nodeVal : AND index : 369
dangling node deleted : nodeVal : AND index : 373
dangling node deleted : nodeVal : AND index : 387
dangling node deleted : nodeVal : AND index : 407
dangling node deleted : nodeVal : NOT index : 129
dangling node deleted : nodeVal : NOT index : 399
dangling node deleted : nodeVal : n145 index : 1
dangling node deleted : nodeVal : n79 index : 1
dangling node deleted : nodeVal : tmp4099 index : 1
dangling node deleted : nodeVal : tmp4122 index : 1
dangling node deleted : nodeVal : tmp4130 index : 1
dangling node deleted : nodeVal : tmp632 index : 1
dangling node deleted : nodeVal : tmp965 index : 1
dangling node deleted : nodeVal : AND index : 127
dangling node deleted : nodeVal : AND index : 352
dangling node deleted : nodeVal : AND index : 364
dangling node deleted : nodeVal : AND index : 385
dangling node deleted : nodeVal : AND index : 397
dangling node deleted : nodeVal : AND index : 405
dangling node deleted : nodeVal : NOT index : 259
dangling node deleted : nodeVal : tmp4123 index : 1
dangling node deleted : nodeVal : tmp4124 index : 1
dangling node deleted : nodeVal : AND index : 395
dangling node deleted : nodeVal : AND index : 402
dangling node deleted : nodeVal : tmp4113 index : 1
dangling node deleted : nodeVal : AND index : 390
cleanup fin
sharing detect fin
cleanup fin
graph opt finished
INORDER = i_9 i_8 i_7 i_6 i_5 i_4 i_3 i_2 i_17 i_16 i_15 i_14 i_13 i_12 i_11 i_10;
OUTORDER = m_7 m_6 m_5 m_4 m_3 m_2 m_1 m_0;
n100 = (!i_2);
n109 = (i_12 * n100);
n114 = (!i_11);
n140 = (!i_10 * n100) + (i_10 * !n100);
n25 = (i_10 * i_2);
n26 = (i_11 * i_3);
n30 = (!i_10);
n35 = (!i_16 * i_8) + (i_16 * !i_8);
n36 = (i_17 * i_9);
n38 = (!i_7);
n39 = (!i_15 * n38) + (i_15 * !n38);
n42 = (!i_6);
n43 = (!i_14 * n42) + (i_14 * !n42);
n45 = (!i_13 * i_5) + (i_13 * !i_5);
n50 = (!i_3);
n51 = (!i_11 * n50) + (i_11 * !n50);
n52 = (i_12 * i_4);
n57 = (!i_4);
n58 = (!i_12 * n57) + (i_12 * !n57);
n59 = (i_13 * i_5);
n61 = (i_14 * i_6);
n64 = (i_15 * i_7);
n66 = (i_16 * i_8);
n70 = (!i_15);
n73 = (!i_14);
n81 = (!i_5);
n82 = (!i_13);
n95 = (!i_12);
m_7 = (!n35 * n36) + (n35 * !n36);
n101 = (n100 * n30);
n113 = (!n25);
n115 = (n114 * n50);
n125 = (!n51);
n130 = (!n58);
n27 = (!n26);
n28 = (n25 * n27);
n31 = (n26 * n30);
n37 = (n35 * n36);
n40 = (!n39);
n44 = (!n43);
n46 = (n44 * n45);
n53 = (!n52);
n54 = (n51 * n53);
n60 = (!n59);
n62 = (!n61);
n65 = (!n64);
n67 = (!n66);
n71 = (n38 * n70);
n74 = (n42 * n73);
n83 = (n81 * n82);
n96 = (n57 * n95);
n102 = (!n101);
n103 = (n27 * n53);
n110 = (n109 * n31);
n116 = (!n115);
n117 = (n113 * n116);
n134 = (n130 * n83);
n141 = (!n140 * n27) + (n140 * !n27);
n146 = (n125 * n96);
n155 = (!n125 * n96) + (n125 * !n96);
n165 = (!n37);
n181 = (n165 * n67);
n29 = (!n28);
n32 = (!n31);
n41 = (n37 * n40);
n47 = (n41 * n46);
n55 = (!n54);
n63 = (n60 * n62);
n68 = (n65 * n67);
n72 = (!n71);
n75 = (!n74);
n84 = (!n83);
n97 = (!n96);
m_6 = (!n181 * n39) + (n181 * !n39);
n104 = (n102 * n103);
n107 = (i_4 * n84);
n118 = (!n117);
n119 = (n102 * n118);
n127 = (n58 * n84);
n131 = (n130 * n63);
n135 = (!n134);
n147 = (!n146);
n148 = (n116 * n147);
n166 = (n165 * n68);
n174 = (!n41);
n33 = (n29 * n32);
n69 = (!n68);
n76 = (n72 * n75);
n89 = (!n47);
n90 = (n32 * n89);
tmp4091 = (n104 * n97);
tmp4150 = (n63 * n84);
tmp626 = (n127 * n63);
tmp7179 = (n107 * n63);
n120 = (!n119);
n142 = (!n141 * n89) + (n141 * !n89);
n149 = (!n140 * n148) + (n140 * !n148);
n167 = (!n166);
n175 = (n174 * n67);
n34 = (!n33);
n48 = (n34 * n47);
n77 = (n69 * n76);
n91 = (!n90);
n168 = (n167 * n72);
n176 = (!n175);
n49 = (!n48);
n78 = (!n77);
tmp625 = (n78 * tmp626);
tmp7178 = (n78 * tmp7179);
tmp961 = (!n142 * n149) + (n142 * !n149);
n108 = (!n107 * tmp7178) + (n107 * !tmp7178);
n132 = (n131 * n78);
n169 = (!n168);
n177 = (n176 * n40);
n56 = (n49 * n55);
tmp4149 = (n78 * tmp4150);
tmp624 = (!tmp625);
n111 = (n108 * n110);
n126 = (!n108 * n125) + (n108 * !n125);
n129 = (!n127 * tmp624) + (n127 * !tmp624);
n133 = (!n132);
n170 = (n169 * n62);
n178 = (!n177);
n85 = (!n84 * tmp4149) + (n84 * !tmp4149);
n112 = (!n111);
n136 = (n133 * n135);
n137 = (n129 * n136);
n158 = (!n126);
n171 = (!n170);
n179 = (n178 * n65);
n86 = (!n85);
tmp1989 = (n129 * n155);
tmp3553 = (n126 * n47);
tmp4090 = (n85 * tmp4091);
tmp8153 = (n129 + tmp1989);
m_3 = (!n137 * n89) + (n137 * !n89);
m_5 = (!n179 * n43) + (n179 * !n43);
n121 = (n112 * n120);
n138 = (!n137);
n139 = (n126 * n138);
n153 = (n138 * tmp3553);
n172 = (n171 * n75);
n87 = (n58 * n86);
tmp212 = (n158 * n89);
tmp4089 = (!tmp4090);
tmp8152 = (!tmp1989 * tmp212) + (tmp1989 * !tmp212);
m_4 = (!n172 * n45) + (n172 * !n45);
n106 = (!n104 * tmp4089) + (n104 * !tmp4089);
n122 = (n106 * n121);
n154 = (!n153);
n88 = (!n87);
tmp8151 = (n136 * tmp8152);
tmp960 = (n139 * tmp961);
n123 = (!n122);
n92 = (n88 * n91);
tmp8150 = (tmp8151 * tmp8153);
tmp959 = (!tmp960);
m_1 = (!n149 * tmp959) + (n149 * !tmp959);
n93 = (n56 * n92);
tmp8149 = (!tmp8150);
n162 = (!tmp212 * tmp8149) + (tmp212 * !tmp8149);
n94 = (!n93);
m_0 = (n123 * n94);
m_2 = (n154 * n162);


new graph depth
---graph depth print---
var : m_0 depth : 8
var : m_1 depth : 8
var : m_2 depth : 8
var : m_3 depth : 6
var : m_4 depth : 6
var : m_5 depth : 6
var : m_6 depth : 3
var : m_7 depth : 1
---------------------
old mult depth : 10
new mult depth : 8
